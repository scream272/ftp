# _*_coding:utf-8_*_
# !/usr/bin/python

from ctypes import cdll
import os
import sys
import ftplib

'''
???????????????????????????????



'''




class myFtp:
    ftp = ftplib.FTP()
    bIsDir = False
    path = " "

    def __init__(self, host, port = '21'):
        self.ftp.connect(host, port)

    def Login(self, user, passwd):
        self.ftp.login(user, passwd)
        print self.ftp.welcome

    def UpLoadFile(self, LocalFile, RemoteFile):
        if os.path.isfile( LocalFile ) == False:
            return False
        file_handler = open(LocalFile, "rb")
        self.ftp.storbinary('STOR %s' % RemoteFile, file_handler, 4096)
        file_handler.close()
        return True

    # ??????????????????????????????????????????
    # ?????????????????????????????????????????
    '''
    ????????????????????????????????????????
    1.?????????????????  ???????????????
    2.???????????????   (?????????)
    
    ???????????????????????????ftp server???????????????????????
    ?????????????????????????????????????????????????????????
    
    
    
    
    '''
    def UpLoadFileTree(self, RemoteDir, LocalDir):
        print "LocalDir is %s, RemoteDir is %s" % (LocalDir, RemoteDir)
        if os.path.isdir(LocalDir) == False:
            return False
        print 'LocalDir:', LocalDir
        LocalNames = os.listdir(LocalDir)    # ?????????????????????,????????????????
        print 'list:', LocalNames
        print RemoteDir
        self.ftp.cwd(RemoteDir)
        self.ftp.dir()

        # ftp.cmd("xxxxx/xxxxx")  ??????
        # ftp.cwd(pathname)    ??FTP???????

        for Local in LocalNames:
            src = os.path.join(LocalDir, Local)  # ?????????????
            if os.path.isdir(src):
                self.UpLoadFileTree(src, Local)
            else:
                self.UpLoadFile(src, Local)

        self.ftp.cwd("..")
        return

'''??????????'''

'''   def DownLoadFileTree(self, LocalDir, RemoteDir):
        print "remoteDir:", RemoteDir

        if os.path.isdir(LocalDir) == False:
            os.makedirs(LocalDir)

        self.ftp.cwd(RemoteDir)
        RemoteNames = self.ftp.nlst()    #????????
        print "RemoteNames", RemoteNames


        for file in RemoteNames:
            Local = os.path.join(LocalDir, file)
            if self.isDir(file):
                self.DownLoadFileTree(Local, file)
            else:
                self.DownLoadFile(Local, file)
        self.ftp.cwd("..")
        return

'''


def show(self, list):
    result = list.lower().split(" ")
    if self.path in result and "<dir>" in result:
        self.bIsDir = True


def isDir(self, path):
    self.bIsDir = False
    self.path = path
    # this ues callback function ,that will change bIsDir value
    self.ftp.retrlines('LIST', self.show)
    return self.bIsDir


def close(self):
    self.ftp.quit()


if __name__ == "__main__":
    ftp = myFtp('127.0.0.1')
    ftp.Login('ahriy', 'root')

    # ftp.DownLoadFileTree('', '')  # ok
    ftp.UpLoadFileTree('/root/PycharmProjects/FTP', "/test_1")
     #ftp.close()
